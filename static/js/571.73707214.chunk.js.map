{"version":3,"file":"static/js/571.73707214.chunk.js","mappings":"sSAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIDC,EAAiB,mCAAG,sGACNN,EAASO,IAAT,8BADM,uBACrBC,EADqB,EACrBA,KADqB,kBAEtBA,EAAKC,SAFiB,2CAAH,qDAKjBC,EAAe,mCAAG,WAAOC,GAAP,yFACJX,EAASO,IAAT,iBAAuBI,IADnB,uBACnBH,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKfI,EAAe,mCAAG,WAAOC,GAAP,yFACJb,EAASO,IAAT,6BAAmCM,EAAnC,gCADI,uBACnBL,EADmB,EACnBA,KADmB,kBAEpBA,EAAKC,SAFe,2CAAH,sDAMfK,EAAY,mCAAG,WAAOH,GAAP,yFACDX,EAASO,IAAT,iBAAuBI,EAAvB,aADC,uBAChBH,EADgB,EAChBA,KADgB,kBAEjBA,EAAKO,MAFY,2CAAH,sDAKZC,EAAe,mCAAG,WAAOL,GAAP,yFACJX,EAASO,IAAT,iBAAuBI,EAAvB,oBADI,uBACnBH,EADmB,EACnBA,KADmB,kBAEpBA,EAAKC,SAFe,2CAAH,qD,2GC9B5B,GAAgB,KAAO,sBAAsB,QAAU,0B,6CC4DvD,EAvDgB,WACd,OAA8BQ,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAEQZ,GAAOa,EAAAA,EAAAA,MAAPb,IAERc,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,oGAEtBH,GAAW,GAFW,UAGHP,EAAAA,EAAAA,IAAgBW,OAAOhB,IAHpB,OAGhBH,EAHgB,OAItBW,EAAWX,GAJW,gDAMtBa,EAAS,KAAMO,SANO,yBAQtBL,GAAW,GARW,4EAAH,qDAWvBG,GACD,GAAE,CAACf,IAEJ,IAAMkB,EAAWX,EAAQY,KAAI,gBAAGnB,EAAH,EAAGA,GAAIoB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAC3B,gBAAaC,UAAWC,EAAAA,KAAxB,WACE,qCAAaH,MACb,uBAAIC,MAFGrB,EADkB,IAO7B,OACE,iCACE,SAAC,KAAD,CACEwB,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAEC,WAAY,OAC5BC,QAASpB,IAAW,IAErBF,IAAU,cACPuB,MAAO,CACLC,SAAU,OACVC,UAAW,SACXP,MAAO,OAJF,2DAOVpB,EAAQ4B,OAAS,IAAK,eAAIb,UAAWC,EAAAA,KAAf,SAA0BL,IAC7B,IAAnBX,EAAQ4B,SAAiB1B,IAAUE,IAClC,cAAGW,UAAWC,EAAAA,QAAd,wDAIP,C","sources":["api/fetchApi.js","webpack://goit-react-hw-05-movies/./src/components/Reviews/reviews.module.css?5c8c","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '9d504f0d6629b3ea4ce96304b577daca',\n    language: 'en-US',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n    const { data } = await instance.get(`/trending/movie/day?page=1`);\n    return data.results;\n}\n\nexport const getMovieDetails = async (id) => {\n    const { data } = await instance.get(`/movie/${id}`);\n    return data;\n}\n\nexport const getSearchMovies = async (search) => {\n    const { data } = await instance.get(`search/movie?query=${search}&page=1&include_adult=false`);\n    return data.results;\n    \n}\n\nexport const getMovieCast = async (id) => {\n    const { data } = await instance.get(`/movie/${id}/credits`);\n    return data.cast;\n}\n\nexport const getMovieReviews = async (id) => {\n    const { data } = await instance.get(`/movie/${id}/reviews?page=1`);\n    return data.results;\n}","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"reviews_list__BCK8P\",\"comment\":\"reviews_comment__e3Mse\"};","import css from '../Reviews/reviews.module.css';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'api/fetchApi';\nimport { ThreeDots } from 'react-loader-spinner';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        setLoading(true);\n        const data = await getMovieReviews(Number(id));\n        setReviews(data);\n      } catch (error) {\n        setError(error.massage);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovieReviews();\n  }, [id]);\n\n  const elements = reviews.map(({ id, author, content }) => (\n    <li key={id} className={css.item}>\n      <h3>Author: {author}</h3>\n      <p>{content}</p>\n    </li>\n  ));\n\n  return (\n    <>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#FF0000\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{ marginLeft: '45%' }}\n        visible={loading && true}\n      />\n      {error && (<p\n          style={{\n            fontSize: '24px',\n            textAlign: 'center',\n            color: 'red',}}\n      >Something goes wrong. Please try again later.</p>)}\n      \n      {reviews.length > 0 && <ul className={css.list}>{elements}</ul>}\n      {reviews.length === 0 && !error && !loading && (\n        <p className={css.comment}>We don't have any reviews for this movie</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["instance","axios","baseURL","params","api_key","language","getTrendingMovies","get","data","results","getMovieDetails","id","getSearchMovies","search","getMovieCast","cast","getMovieReviews","useState","reviews","setReviews","error","setError","loading","setLoading","useParams","useEffect","fetchMovieReviews","Number","massage","elements","map","author","content","className","css","height","width","radius","color","ariaLabel","wrapperStyle","marginLeft","visible","style","fontSize","textAlign","length"],"sourceRoot":""}